name: release
on: 
  push:
    tags:
      - '*'

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    environment: vcpkg
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: lukka/get-cmake@v3.31.5

      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        env:
          VCPKG_BINARY_SOURCES: "clear;http,https://vcpkg:${{ secrets.VCPKG_WEBDAV_PW }}@vcpkg.urbackup.org,readwrite"
        with:
          vcpkgJsonGlob: 'vcpkg.json'
          vcpkgGitCommitId: d5ec528843d29e3a52d745a64b469f810b2cedbf

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup system
        run: |
          sudo apt-get update
          sudo apt-get install -y linux-libc-dev liburing-dev

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: './www/pnpm-lock.yaml'

      - name: Build
        env:
          VCPKG_BINARY_SOURCES: "clear;http,https://vcpkg:${{ secrets.VCPKG_WEBDAV_PW }}@vcpkg.urbackup.org,readwrite"
        run: bash build.sh

      - name: Install Python dependencies
        run: pip install -r test/requirements.txt

      - name: Install pytest dependencies
        run: pip install pytest-md pytest-emoji

      - uses: pavelzw/pytest-action@v2
        with:
          emoji: false
          custom-arguments: -p no:sugar --benchmark-skip test --timeout=300

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
         allowUpdates: true
         artifacts: "hs5*.xz"
